{
    "sourceFile": "client/src/components/IssueList.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 19,
            "patches": [
                {
                    "date": 1740858888741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740861372599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,27 +1,67 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n-import IssueItem from './IssueItem';\r\n \r\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const [totalPages, setTotalPages] = useState(1); // מספר עמודים מקסימלי\r\n+    const perPage = 10; // מספר ה-*issues* בעמוד אחד\r\n \r\n     useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/issues')\r\n-            .then(response => {\r\n+        const fetchIssues = async () => {\r\n+            try {\r\n+                const response = await axios.get('https://api.github.com/repos/treeverse/lakeFS/issues', {\r\n+                    params: {\r\n+                        page: page,\r\n+                        per_page: perPage,\r\n+                        sort: 'created',\r\n+                        direction: 'desc'\r\n+                    }\r\n+                });\r\n+\r\n                 setIssues(response.data);\r\n-            })\r\n-            .catch(error => {\r\n+\r\n+                // חישוב מספר העמודים (GitHub מחזיר `Link` header עם מידע על עמודים)\r\n+                const linkHeader = response.headers.link;\r\n+                if (linkHeader) {\r\n+                    const lastPageMatch = linkHeader.match(/&page=(\\d+)>; rel=\"last\"/);\r\n+                    if (lastPageMatch) {\r\n+                        setTotalPages(parseInt(lastPageMatch[1], 10));\r\n+                    }\r\n+                }\r\n+            } catch (error) {\r\n                 console.error('Error fetching issues:', error);\r\n-            });\r\n-    }, []);\r\n+            }\r\n+        };\r\n \r\n+        fetchIssues();\r\n+    }, [page]); // הפעלת הפונקציה כאשר העמוד משתנה\r\n+\r\n     return (\r\n-        <ul>\r\n-            {issues.map(issue => (\r\n-                <IssueItem key={issue.id} issue={issue} />\r\n-            ))}\r\n-        </ul>\r\n+        <div>\r\n+            <h2>GitHub Issues</h2>\r\n+            <ul>\r\n+                {issues.map(issue => (\r\n+                    <li key={issue.id}>\r\n+                        <a href={issue.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n+                            {issue.title}\r\n+                        </a>\r\n+                    </li>\r\n+                ))}\r\n+            </ul>\r\n+\r\n+            {/* כפתורי דפדוף */}\r\n+            <div>\r\n+                <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n+                    ← Previous\r\n+                </button>\r\n+                <span> Page {page} of {totalPages} </span>\r\n+                <button disabled={page >= totalPages} onClick={() => setPage(page + 1)}>\r\n+                    Next →\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n     );\r\n-}\r\n+};\r\n \r\n export default IssueList;\r\n"
                },
                {
                    "date": 1740861416476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +1,27 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n+import IssueItem from './IssueItem';\r\n \r\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n-    const [page, setPage] = useState(1);\r\n-    const [totalPages, setTotalPages] = useState(1); // מספר עמודים מקסימלי\r\n-    const perPage = 10; // מספר ה-*issues* בעמוד אחד\r\n \r\n     useEffect(() => {\r\n-        const fetchIssues = async () => {\r\n-            try {\r\n-                const response = await axios.get('https://api.github.com/repos/treeverse/lakeFS/issues', {\r\n-                    params: {\r\n-                        page: page,\r\n-                        per_page: perPage,\r\n-                        sort: 'created',\r\n-                        direction: 'desc'\r\n-                    }\r\n-                });\r\n-\r\n+        axios.get('http://localhost:5000/api/issues')\r\n+            .then(response => {\r\n                 setIssues(response.data);\r\n-\r\n-                // חישוב מספר העמודים (GitHub מחזיר `Link` header עם מידע על עמודים)\r\n-                const linkHeader = response.headers.link;\r\n-                if (linkHeader) {\r\n-                    const lastPageMatch = linkHeader.match(/&page=(\\d+)>; rel=\"last\"/);\r\n-                    if (lastPageMatch) {\r\n-                        setTotalPages(parseInt(lastPageMatch[1], 10));\r\n-                    }\r\n-                }\r\n-            } catch (error) {\r\n+            })\r\n+            .catch(error => {\r\n                 console.error('Error fetching issues:', error);\r\n-            }\r\n-        };\r\n+            });\r\n+    }, []);\r\n \r\n-        fetchIssues();\r\n-    }, [page]); // הפעלת הפונקציה כאשר העמוד משתנה\r\n-\r\n     return (\r\n-        <div>\r\n-            <h2>GitHub Issues</h2>\r\n-            <ul>\r\n-                {issues.map(issue => (\r\n-                    <li key={issue.id}>\r\n-                        <a href={issue.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n-                            {issue.title}\r\n-                        </a>\r\n-                    </li>\r\n-                ))}\r\n-            </ul>\r\n-\r\n-            {/* כפתורי דפדוף */}\r\n-            <div>\r\n-                <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n-                    ← Previous\r\n-                </button>\r\n-                <span> Page {page} of {totalPages} </span>\r\n-                <button disabled={page >= totalPages} onClick={() => setPage(page + 1)}>\r\n-                    Next →\r\n-                </button>\r\n-            </div>\r\n-        </div>\r\n+        <ul>\r\n+            {issues.map(issue => (\r\n+                <IssueItem key={issue.id} issue={issue} />\r\n+            ))}\r\n+        </ul>\r\n     );\r\n-};\r\n+}\r\n \r\n export default IssueList;\r\n"
                },
                {
                    "date": 1740861577622,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,25 +3,62 @@\n import IssueItem from './IssueItem';\r\n \r\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n+    const [page, setPage] = useState(1);\r\n+    const [totalPages, setTotalPages] = useState(1);\r\n+    const perPage = 10; // כמה *issues* להציג בכל עמוד\r\n \r\n     useEffect(() => {\r\n-        axios.get('http://localhost:5000/api/issues')\r\n-            .then(response => {\r\n+        const fetchIssues = async () => {\r\n+            try {\r\n+                const response = await axios.get('https://api.github.com/repos/treeverse/lakeFS/issues', {\r\n+                    params: {\r\n+                        page: page,\r\n+                        per_page: perPage,\r\n+                        sort: 'created',\r\n+                        direction: 'desc'\r\n+                    }\r\n+                });\r\n+\r\n                 setIssues(response.data);\r\n-            })\r\n-            .catch(error => {\r\n+\r\n+                // חישוב מספר העמודים הכולל\r\n+                const linkHeader = response.headers.link;\r\n+                if (linkHeader) {\r\n+                    const lastPageMatch = linkHeader.match(/&page=(\\d+)>; rel=\"last\"/);\r\n+                    if (lastPageMatch) {\r\n+                        setTotalPages(parseInt(lastPageMatch[1], 10));\r\n+                    }\r\n+                }\r\n+            } catch (error) {\r\n                 console.error('Error fetching issues:', error);\r\n-            });\r\n-    }, []);\r\n+            }\r\n+        };\r\n \r\n+        fetchIssues();\r\n+    }, [page]);\r\n+\r\n     return (\r\n-        <ul>\r\n-            {issues.map(issue => (\r\n-                <IssueItem key={issue.id} issue={issue} />\r\n-            ))}\r\n-        </ul>\r\n+        <div>\r\n+            <h2>GitHub Issues</h2>\r\n+            <ul>\r\n+                {issues.map(issue => (\r\n+                    <IssueItem key={issue.id} issue={issue} />\r\n+                ))}\r\n+            </ul>\r\n+\r\n+            {/* כפתורי דפדוף */}\r\n+            <div>\r\n+                <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n+                    ← Previous\r\n+                </button>\r\n+                <span> Page {page} of {totalPages} </span>\r\n+                <button disabled={page >= totalPages} onClick={() => setPage(page + 1)}>\r\n+                    Next →\r\n+                </button>\r\n+            </div>\r\n+        </div>\r\n     );\r\n-}\r\n+};\r\n \r\n export default IssueList;\r\n"
                },
                {
                    "date": 1740861656363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,14 +18,17 @@\n                         sort: 'created',\r\n                         direction: 'desc'\r\n                     }\r\n                 });\r\n-\r\n+        \r\n+                console.log(response.headers); // בדיקה מה מוחזר מה-API\r\n+        \r\n                 setIssues(response.data);\r\n-\r\n-                // חישוב מספר העמודים הכולל\r\n+        \r\n+                // חישוב מספר העמודים מתוך ה-headers של GitHub\r\n                 const linkHeader = response.headers.link;\r\n                 if (linkHeader) {\r\n+                    console.log(\"Link Header:\", linkHeader);\r\n                     const lastPageMatch = linkHeader.match(/&page=(\\d+)>; rel=\"last\"/);\r\n                     if (lastPageMatch) {\r\n                         setTotalPages(parseInt(lastPageMatch[1], 10));\r\n                     }\r\n@@ -33,8 +36,9 @@\n             } catch (error) {\r\n                 console.error('Error fetching issues:', error);\r\n             }\r\n         };\r\n+        \r\n \r\n         fetchIssues();\r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1740861759813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,12 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n-import IssueItem from './IssueItem';\r\n \r\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [totalPages, setTotalPages] = useState(1);\r\n-    const perPage = 10; // כמה *issues* להציג בכל עמוד\r\n+    const perPage = 10; // מספר ה-*issues* לכל עמוד\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n@@ -16,19 +15,22 @@\n                         page: page,\r\n                         per_page: perPage,\r\n                         sort: 'created',\r\n                         direction: 'desc'\r\n+                    },\r\n+                    headers: {\r\n+                        'Accept': 'application/vnd.github.v3+json'\r\n                     }\r\n                 });\r\n-        \r\n-                console.log(response.headers); // בדיקה מה מוחזר מה-API\r\n-        \r\n+\r\n+                console.log(\"Response Headers:\", response.headers); // בדיקה אם link header מוחזר\r\n+\r\n                 setIssues(response.data);\r\n-        \r\n-                // חישוב מספר העמודים מתוך ה-headers של GitHub\r\n+\r\n+                // שליפת מספר העמודים מתוך ה-headers של GitHub\r\n                 const linkHeader = response.headers.link;\r\n                 if (linkHeader) {\r\n-                    console.log(\"Link Header:\", linkHeader);\r\n+                    console.log(\"Link Header:\", linkHeader); // בדיקה אם link header קיים\r\n                     const lastPageMatch = linkHeader.match(/&page=(\\d+)>; rel=\"last\"/);\r\n                     if (lastPageMatch) {\r\n                         setTotalPages(parseInt(lastPageMatch[1], 10));\r\n                     }\r\n@@ -36,9 +38,8 @@\n             } catch (error) {\r\n                 console.error('Error fetching issues:', error);\r\n             }\r\n         };\r\n-        \r\n \r\n         fetchIssues();\r\n     }, [page]);\r\n \r\n@@ -46,9 +47,13 @@\n         <div>\r\n             <h2>GitHub Issues</h2>\r\n             <ul>\r\n                 {issues.map(issue => (\r\n-                    <IssueItem key={issue.id} issue={issue} />\r\n+                    <li key={issue.id}>\r\n+                        <a href={issue.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n+                            #{issue.number} - {issue.title}\r\n+                        </a>\r\n+                    </li>\r\n                 ))}\r\n             </ul>\r\n \r\n             {/* כפתורי דפדוף */}\r\n"
                },
                {
                    "date": 1740861835256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n-    const [totalPages, setTotalPages] = useState(1);\r\n-    const perPage = 10; // מספר ה-*issues* לכל עמוד\r\n+    const [hasNextPage, setHasNextPage] = useState(false);\r\n+    const perPage = 10; // מספר ה-*issues* בעמוד\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n@@ -21,28 +21,27 @@\n                         'Accept': 'application/vnd.github.v3+json'\r\n                     }\r\n                 });\r\n \r\n-                console.log(\"Response Headers:\", response.headers); // בדיקה אם link header מוחזר\r\n+                console.log(\"Response Headers:\", response.headers); // לבדוק מה מחזיר ה-API\r\n+                console.log(\"Fetched Issues:\", response.data); // לבדוק את הנתונים\r\n \r\n                 setIssues(response.data);\r\n \r\n-                // שליפת מספר העמודים מתוך ה-headers של GitHub\r\n+                // בדיקה אם יש עוד עמודים\r\n                 const linkHeader = response.headers.link;\r\n-                if (linkHeader) {\r\n-                    console.log(\"Link Header:\", linkHeader); // בדיקה אם link header קיים\r\n-                    const lastPageMatch = linkHeader.match(/&page=(\\d+)>; rel=\"last\"/);\r\n-                    if (lastPageMatch) {\r\n-                        setTotalPages(parseInt(lastPageMatch[1], 10));\r\n-                    }\r\n+                if (linkHeader && linkHeader.includes('rel=\"next\"')) {\r\n+                    setHasNextPage(true);\r\n+                } else {\r\n+                    setHasNextPage(false);\r\n                 }\r\n             } catch (error) {\r\n                 console.error('Error fetching issues:', error);\r\n             }\r\n         };\r\n \r\n         fetchIssues();\r\n-    }, [page]);\r\n+    }, [page]); // קבלת נתונים מחדש בכל שינוי עמוד\r\n \r\n     return (\r\n         <div>\r\n             <h2>GitHub Issues</h2>\r\n@@ -60,10 +59,10 @@\n             <div>\r\n                 <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n                     ← Previous\r\n                 </button>\r\n-                <span> Page {page} of {totalPages} </span>\r\n-                <button disabled={page >= totalPages} onClick={() => setPage(page + 1)}>\r\n+                <span> Page {page} </span>\r\n+                <button disabled={!hasNextPage} onClick={() => setPage(page + 1)}>\r\n                     Next →\r\n                 </button>\r\n             </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1740861848488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,8 @@\n                     </li>\r\n                 ))}\r\n             </ul>\r\n \r\n-            {/* כפתורי דפדוף */}\r\n             <div>\r\n                 <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n                     ← Previous\r\n                 </button>\r\n"
                },
                {
                    "date": 1740861857289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n                 console.log(\"Fetched Issues:\", response.data); // לבדוק את הנתונים\r\n \r\n                 setIssues(response.data);\r\n \r\n-                // בדיקה אם יש עוד עמודים\r\n                 const linkHeader = response.headers.link;\r\n                 if (linkHeader && linkHeader.includes('rel=\"next\"')) {\r\n                     setHasNextPage(true);\r\n                 } else {\r\n@@ -39,9 +38,9 @@\n             }\r\n         };\r\n \r\n         fetchIssues();\r\n-    }, [page]); // קבלת נתונים מחדש בכל שינוי עמוד\r\n+    }, [page]); \r\n \r\n     return (\r\n         <div>\r\n             <h2>GitHub Issues</h2>\r\n"
                },
                {
                    "date": 1740861920777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage = 10; // מספר ה-*issues* בעמוד\r\n+    const perPage = 25; // מספר ה-*issues* בעמוד\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n@@ -21,11 +21,10 @@\n                         'Accept': 'application/vnd.github.v3+json'\r\n                     }\r\n                 });\r\n \r\n-                console.log(\"Response Headers:\", response.headers); // לבדוק מה מחזיר ה-API\r\n-                console.log(\"Fetched Issues:\", response.data); // לבדוק את הנתונים\r\n-\r\n+                console.log(\"Response Headers:\", response.headers); \r\n+                console.log(\"Fetched Issues:\", response.data); \r\n                 setIssues(response.data);\r\n \r\n                 const linkHeader = response.headers.link;\r\n                 if (linkHeader && linkHeader.includes('rel=\"next\"')) {\r\n"
                },
                {
                    "date": 1740861955736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage = 25; // מספר ה-*issues* בעמוד\r\n+    const perPage = 25;\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n"
                },
                {
                    "date": 1740862053010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,13 @@\n import React, { useState, useEffect } from 'react';\r\n import axios from 'axios';\r\n+import IssueItem from './IssueItem';\r\n \r\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage = 25;\r\n+    const perPage = 10;\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n@@ -21,36 +22,26 @@\n                         'Accept': 'application/vnd.github.v3+json'\r\n                     }\r\n                 });\r\n \r\n-                console.log(\"Response Headers:\", response.headers); \r\n-                console.log(\"Fetched Issues:\", response.data); \r\n                 setIssues(response.data);\r\n \r\n                 const linkHeader = response.headers.link;\r\n-                if (linkHeader && linkHeader.includes('rel=\"next\"')) {\r\n-                    setHasNextPage(true);\r\n-                } else {\r\n-                    setHasNextPage(false);\r\n-                }\r\n+                setHasNextPage(linkHeader && linkHeader.includes('rel=\"next\"'));\r\n             } catch (error) {\r\n                 console.error('Error fetching issues:', error);\r\n             }\r\n         };\r\n \r\n         fetchIssues();\r\n-    }, [page]); \r\n+    }, [page]);\r\n \r\n     return (\r\n         <div>\r\n             <h2>GitHub Issues</h2>\r\n             <ul>\r\n                 {issues.map(issue => (\r\n-                    <li key={issue.id}>\r\n-                        <a href={issue.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n-                            #{issue.number} - {issue.title}\r\n-                        </a>\r\n-                    </li>\r\n+                    <IssueItem key={issue.id} issue={issue} />\r\n                 ))}\r\n             </ul>\r\n \r\n             <div>\r\n"
                },
                {
                    "date": 1740862059004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage = 10;\r\n+    const perPage = 25;\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n"
                },
                {
                    "date": 1740862313747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,13 @@\n \r\n     return (\r\n         <div>\r\n             <h2>GitHub Issues</h2>\r\n-            <ul>\r\n-                {issues.map(issue => (\r\n-                    <IssueItem key={issue.id} issue={issue} />\r\n-                ))}\r\n-            </ul>\r\n-\r\n+            <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n+            {issues.map(issue => (\r\n+                <IssueItem key={issue.id} issue={issue} />\r\n+            ))}\r\n+        </ul>\r\n             <div>\r\n                 <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n                     ← Previous\r\n                 </button>\r\n"
                },
                {
                    "date": 1740862318800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,10 @@\n             <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n             {issues.map(issue => (\r\n                 <IssueItem key={issue.id} issue={issue} />\r\n             ))}\r\n-        </ul>\r\n+            </ul>\r\n+            \r\n             <div>\r\n                 <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n                     ← Previous\r\n                 </button>\r\n"
                },
                {
                    "date": 1740862347177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,14 +37,14 @@\n \r\n     return (\r\n         <div>\r\n             <h2>GitHub Issues</h2>\r\n-            <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n-            {issues.map(issue => (\r\n-                <IssueItem key={issue.id} issue={issue} />\r\n-            ))}\r\n+            <ul>\r\n+                {issues.map(issue => (\r\n+                    <IssueItem key={issue.id} issue={issue} />\r\n+                ))}\r\n             </ul>\r\n-            \r\n+\r\n             <div>\r\n                 <button disabled={page === 1} onClick={() => setPage(page - 1)}>\r\n                     ← Previous\r\n                 </button>\r\n"
                },
                {
                    "date": 1740862383177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage = 25;\r\n+    const perPage = ;\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n"
                },
                {
                    "date": 1740862450720,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage = ;\r\n+    const perPage = 10;\r\n \r\n     useEffect(() => {\r\n         const fetchIssues = async () => {\r\n             try {\r\n"
                },
                {
                    "date": 1740862694673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n     const perPage =25;\r\n \r\n     useEffect(() => {\r\n+        \r\n         const fetchIssues = async () => {\r\n             try {\r\n                 const response = await axios.get('https://api.github.com/repos/treeverse/lakeFS/issues', {\r\n                     params: {\r\n"
                },
                {
                    "date": 1740863282897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,11 @@\n const IssueList = () => {\r\n     const [issues, setIssues] = useState([]);\r\n     const [page, setPage] = useState(1);\r\n     const [hasNextPage, setHasNextPage] = useState(false);\r\n-    const perPage =25;\r\n+    const perPage = 10;\r\n \r\n     useEffect(() => {\r\n-        // const GITHUB_TOKEN = process.env.REACT_APP_GITHUB_TOKEN;\r\n-        // console.log('GITHUB_TOKEN:', GITHUB_TOKEN);\r\n         const fetchIssues = async () => {\r\n             try {\r\n                 const response = await axios.get('https://api.github.com/repos/treeverse/lakeFS/issues', {\r\n                     params: {\r\n@@ -20,11 +18,9 @@\n                         sort: 'created',\r\n                         direction: 'desc'\r\n                     },\r\n                     headers: {\r\n-                        'Accept': 'application/vnd.github.v3+json',\r\n-                        // 'Authorization': `token ${GITHUB_TOKEN}`\r\n-\r\n+                        'Accept': 'application/vnd.github.v3+json'\r\n                     }\r\n                 });\r\n \r\n                 setIssues(response.data);\r\n"
                }
            ],
            "date": 1740858888741,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport IssueItem from './IssueItem';\r\n\r\nconst IssueList = () => {\r\n    const [issues, setIssues] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:5000/api/issues')\r\n            .then(response => {\r\n                setIssues(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching issues:', error);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <ul>\r\n            {issues.map(issue => (\r\n                <IssueItem key={issue.id} issue={issue} />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default IssueList;\r\n"
        }
    ]
}